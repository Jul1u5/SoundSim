.TH "soundwavefunction.c" 3 "Wed Sep 30 2015" "SoundSim" \" -*- nroff -*-
.ad l
.nh
.SH NAME
soundwavefunction.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include <stdio\&.h>\fP
.br
\fC#include <stdlib\&.h>\fP
.br
\fC#include <stdbool\&.h>\fP
.br
\fC#include 'main\&.h'\fP
.br
\fC#include 'soundwavefunction\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBincreaseMovement\fP (\fBitem_node\fP *node)"
.br
.ti -1c
.RI "int \fBgetMovement\fP (\fBitem_node\fP *node)"
.br
.ti -1c
.RI "void \fBsetMovement\fP (\fBitem_node\fP *node, int m)"
.br
.ti -1c
.RI "void \fBcopyMovement\fP (\fBitem_node\fP *node, \fBitem_node\fP *newnode)"
.br
.ti -1c
.RI "void \fBsetWaveRoot\fP (\fBitem_node\fP *node, \fBitem_node\fP *rootnode)"
.br
.ti -1c
.RI "\fBitem_node\fP * \fBgetWaveRoot\fP (\fBitem_node\fP *node)"
.br
.ti -1c
.RI "void \fBsetTouche\fP (\fBitem_node\fP *node)"
.br
.ti -1c
.RI "void \fBunTouche\fP (\fBitem_node\fP *node)"
.br
.ti -1c
.RI "void \fBunToucheAll\fP ()"
.br
.ti -1c
.RI "bool \fBgetTouch\fP (\fBitem_node\fP *node)"
.br
.ti -1c
.RI "void \fBdecSoundWithMovement\fP (\fBitem_node\fP *node)"
.br
.ti -1c
.RI "void \fBsetSideOfWave\fP (\fBitem_node\fP *node, int side)"
.br
.ti -1c
.RI "int \fBgetSideOfWave\fP (\fBitem_node\fP *node)"
.br
.ti -1c
.RI "void \fBchangeReboundSideOfWave\fP (\fBitem_node\fP *node)"
.br
.ti -1c
.RI "void \fBsetFreqAll\fP (\fBitem_node\fP *node, \fBitem_node\fP *newnode)"
.br
.ti -1c
.RI "void \fBprocedureH\fP (\fBitem_node\fP *temp, int x, int y, int z, int side)"
.br
.ti -1c
.RI "void \fBprocedure\fP (\fBitem_node\fP *temp, int x, int y, int z, int side)"
.br
.ti -1c
.RI "void \fBaddWave\fP (\fBitem_node\fP *temp, int x, int y, int z)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "int \fBj\fP"
.br
.ti -1c
.RI "int \fBk\fP"
.br
.ti -1c
.RI "int \fBl\fP"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "void addWave (\fBitem_node\fP * temp, int x, int y, int z)"
Welle eines SoundItem wird erzeugt addwave lässt die Welle bis zu einer bestimmten Verschiebungsweite ungekrümmt, danach werden die resultierenden Teilchen 'Kugelfunktionsartig' erzeugt und haben eine zugehörgkeit zur rechten oder linken Seite\&. 
.PP
\fBParameters:\fP
.RS 4
\fItemp\fP 
.br
\fIx\fP 
.br
\fIy\fP 
.br
\fIz\fP 
.RE
.PP

.PP
Definition at line 274 of file soundwavefunction\&.c\&.
.PP
References getDirectionID(), getItemID(), getMovement(), getSideOfWave(), isSoundField(), procedure(), procedureH(), and setTouche()\&.
.PP
Referenced by main()\&.
.SS "void changeReboundSideOfWave (\fBitem_node\fP * node)"
Ähnlich wie Rebound der Teilchen\&. Seitenzugehörigkeit wird verändert 
.PP
\fBParameters:\fP
.RS 4
\fInode\fP 
.RE
.PP

.PP
Definition at line 182 of file soundwavefunction\&.c\&.
.PP
References getSideOfWave(), and setSideOfWave()\&.
.PP
Referenced by main()\&.
.SS "void copyMovement (\fBitem_node\fP * node, \fBitem_node\fP * newnode)"
Kopiert das Movement von einem Item zum anderen 
.PP
\fBParameters:\fP
.RS 4
\fInode\fP 
.br
\fInewnode\fP 
.RE
.PP

.PP
Definition at line 45 of file soundwavefunction\&.c\&.
.PP
References getItemID(), getMovement(), and setMovement()\&.
.PP
Referenced by procedure(), and procedureH()\&.
.SS "void decSoundWithMovement (\fBitem_node\fP * node)"
Verringert die Frequenzen während des Movements 
.PP
\fBParameters:\fP
.RS 4
\fInode\fP 
.RE
.PP

.PP
Definition at line 120 of file soundwavefunction\&.c\&.
.PP
References getFreq10000b20000(), getFreq1000b2000(), getFreq100b150(), getFreq150b400(), getFreq2000b3500(), getFreq20b40(), getFreq3500b6000(), getFreq400b1000(), getFreq40b100(), getFreq6000b10000(), getItemID(), getMovement(), setFreq10000b20000(), setFreq1000b2000(), setFreq100b150(), setFreq150b400(), setFreq2000b3500(), setFreq20b40(), setFreq3500b6000(), setFreq400b1000(), setFreq40b100(), and setFreq6000b10000()\&.
.PP
Referenced by main()\&.
.SS "int getMovement (\fBitem_node\fP * node)"
Getter für Movement 
.PP
\fBParameters:\fP
.RS 4
\fInode\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 23 of file soundwavefunction\&.c\&.
.PP
References item_node::data, getItemID(), and item_node::Sound\&.
.PP
Referenced by addWave(), copyMovement(), decSoundWithMovement(), and prepareArrays()\&.
.SS "int getSideOfWave (\fBitem_node\fP * node)"
Getter für die Seite der Welle 
.PP
\fBParameters:\fP
.RS 4
\fInode\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 171 of file soundwavefunction\&.c\&.
.PP
References item_node::data, getItemID(), and item_node::Sound\&.
.PP
Referenced by addWave(), changeReboundSideOfWave(), interference(), and prepareArrays()\&.
.SS "bool getTouch (\fBitem_node\fP * node)"
Getter für Touched Status 
.PP
\fBParameters:\fP
.RS 4
\fInode\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 109 of file soundwavefunction\&.c\&.
.PP
References item_node::data, getItemID(), and item_node::Sound\&.
.PP
Referenced by main(), and prepareArrays()\&.
.SS "\fBitem_node\fP* getWaveRoot (\fBitem_node\fP * node)"

.PP
Definition at line 57 of file soundwavefunction\&.c\&.
.PP
References item_node::data, getItemID(), and item_node::Sound\&.
.PP
Referenced by interference()\&.
.SS "void increaseMovement (\fBitem_node\fP * node)"
Erhöhung des Movements 
.PP
\fBParameters:\fP
.RS 4
\fInode\fP 
.RE
.PP

.PP
Definition at line 13 of file soundwavefunction\&.c\&.
.PP
References item_node::data, getItemID(), and item_node::Sound\&.
.PP
Referenced by main()\&.
.SS "void procedure (\fBitem_node\fP * temp, int x, int y, int z, int side)"
Zeugs 2 :D 
.PP
\fBParameters:\fP
.RS 4
\fItemp\fP 
.br
\fIx\fP 
.br
\fIy\fP 
.br
\fIz\fP 
.br
\fIside\fP 
.RE
.PP

.PP
Definition at line 253 of file soundwavefunction\&.c\&.
.PP
References addItemNewRoom(), copyMovement(), createItem(), getDirectionID(), setDirectionID(), setFreqAll(), setSideOfWave(), and setTouche()\&.
.PP
Referenced by addWave()\&.
.SS "void procedureH (\fBitem_node\fP * temp, int x, int y, int z, int side)"
Zeugs 
.PP
\fBParameters:\fP
.RS 4
\fItemp\fP 
.br
\fIx\fP 
.br
\fIy\fP 
.br
\fIz\fP 
.br
\fIside\fP 
.RE
.PP

.PP
Definition at line 232 of file soundwavefunction\&.c\&.
.PP
References addItemNewRoom(), copyMovement(), createItem(), getDirectionID(), setDirectionID(), setFreqAll(), setSideOfWave(), setTouche(), and setWaveRoot()\&.
.PP
Referenced by addWave()\&.
.SS "void setFreqAll (\fBitem_node\fP * node, \fBitem_node\fP * newnode)"
Frequenzen eines Teilchen wird von anderem Teilchen übernommen und um einen Faktor reduziert 
.PP
\fBParameters:\fP
.RS 4
\fInode\fP 
.br
\fInewnode\fP 
.RE
.PP

.PP
Definition at line 209 of file soundwavefunction\&.c\&.
.PP
References getFreq10000b20000(), getFreq1000b2000(), getFreq100b150(), getFreq150b400(), getFreq2000b3500(), getFreq20b40(), getFreq3500b6000(), getFreq400b1000(), getFreq40b100(), getFreq6000b10000(), setFreq10000b20000(), setFreq1000b2000(), setFreq100b150(), setFreq150b400(), setFreq2000b3500(), setFreq20b40(), setFreq3500b6000(), setFreq400b1000(), setFreq40b100(), and setFreq6000b10000()\&.
.PP
Referenced by procedure(), and procedureH()\&.
.SS "void setMovement (\fBitem_node\fP * node, int m)"
Setter für Movement 
.PP
\fBParameters:\fP
.RS 4
\fInode\fP 
.br
\fIm\fP 
.RE
.PP

.PP
Definition at line 35 of file soundwavefunction\&.c\&.
.PP
References item_node::data, getItemID(), and item_node::Sound\&.
.PP
Referenced by copyMovement(), createItem(), and createReceipt()\&.
.SS "void setSideOfWave (\fBitem_node\fP * node, int side)"
Legt die Seite der Welle für ein SoundItem fest 
.PP
\fBParameters:\fP
.RS 4
\fInode\fP betroffenes Item 
.br
\fIside\fP Seite der 'Welle' 0 = nicht von betroffen , 1 == Links , 2 = Rechts, 3 = Oben, 4 = Unten 
.RE
.PP

.PP
Definition at line 161 of file soundwavefunction\&.c\&.
.PP
References item_node::data, getItemID(), and item_node::Sound\&.
.PP
Referenced by changeReboundSideOfWave(), createReceipt(), interference(), loudspeaker(), main(), procedure(), and procedureH()\&.
.SS "void setTouche (\fBitem_node\fP * node)"
Touched Element\&.\&.\&. 
.PP
\fBParameters:\fP
.RS 4
\fInode\fP 
.RE
.PP

.PP
Definition at line 70 of file soundwavefunction\&.c\&.
.PP
References item_node::data, getItemID(), and item_node::Sound\&.
.PP
Referenced by addWave(), createReceipt(), procedure(), and procedureH()\&.
.SS "void setWaveRoot (\fBitem_node\fP * node, \fBitem_node\fP * rootnode)"

.PP
Definition at line 51 of file soundwavefunction\&.c\&.
.PP
References item_node::data, getItemID(), and item_node::Sound\&.
.PP
Referenced by interference(), and procedureH()\&.
.SS "void unTouche (\fBitem_node\fP * node)"
Untouched Element\&.\&.\&. 
.PP
\fBParameters:\fP
.RS 4
\fInode\fP 
.RE
.PP

.PP
Definition at line 79 of file soundwavefunction\&.c\&.
.PP
References item_node::data, getItemID(), and item_node::Sound\&.
.PP
Referenced by unToucheAll()\&.
.SS "void unToucheAll ()"
Untouched alle Elemente 
.PP
Definition at line 87 of file soundwavefunction\&.c\&.
.PP
References getItem_Root(), getItemID(), i, j, k, item_node::next, unTouche(), x_format, y_format, and z_format\&.
.PP
Referenced by main()\&.
.SH "Variable Documentation"
.PP 
.SS "int j"

.PP
Definition at line 7 of file soundwavefunction\&.c\&.
.PP
Referenced by unToucheAll()\&.
.SS "int k"

.PP
Definition at line 7 of file soundwavefunction\&.c\&.
.PP
Referenced by unToucheAll()\&.
.SS "int l"

.PP
Definition at line 7 of file soundwavefunction\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for SoundSim from the source code\&.
